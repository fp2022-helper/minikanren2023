(library
 (name numero_decls_nolog)
 (modules numero_decls_nolog)
 (libraries OCanren OCanren.tester counters)
 (wrapped false)
 (flags
  (:standard -rectypes))
 (preprocessor_deps %{project_root}/ocaml/bench/pp5+dump.exe)
 (preprocess
  (pps
   OCanren-ppx.ppx_fresh
   GT.ppx_all
   OCanren-ppx.ppx_distrib
   ppx_optcomp
   --
   -pp
   ocaml/bench/pp5+dump.exe)))

(library
 (name scheme_interpret_nolog)
 (modules scheme_interpret_nolog)
 (libraries OCanren counters)
 (wrapped false)
 (flags
  (:standard -rectypes))
 (preprocessor_deps %{project_root}/ocaml/bench/pp5+dump.exe)
 (preprocess
  (pps
   OCanren-ppx.ppx_fresh
   GT.ppx_all
   OCanren-ppx.ppx_distrib
   ppx_optcomp
   --
   -pp
   ocaml/bench/pp5+dump.exe)))

(library
 (name permo_nolog)
 (modules permo_decls_nolog)
 (libraries OCanren counters)
 (wrapped false)
 (flags
  (:standard -rectypes))
 (preprocessor_deps %{project_root}/ocaml/bench/pp5+dump.exe)
 (preprocess
  (pps
   OCanren-ppx.ppx_fresh
   GT.ppx_all
   OCanren-ppx.ppx_distrib
   ;ppx_optcomp
   --
   -pp
   ocaml/bench/pp5+dump.exe)))

(executables
 (names quines_bench twines_bench thrines_bench)
 (modules quines_bench twines_bench thrines_bench)
 (flags
  (:standard -rectypes))
 (libraries benchmark scheme_interpret_nolog))

(cram
 (deps ./quines_bench.exe twines_bench ./thrines_bench.exe))

(executables
 (names expo_bench logo_bench)
 (modules expo_bench logo_bench)
 (flags
  (:standard -rectypes))
 (libraries benchmark numero_decls_nolog))

(executables
 (names permo_bench)
 (modules permo_bench)
 (flags
  (:standard -rectypes -open Permo_decls_nolog))
 (libraries benchmark permo_nolog))

;(executables
; (names expo_bench2)
; (modules expo_bench2)
; (flags
;  (:standard -rectypes -warn-error -32-69))
; (libraries core_unix.command_unix core_bench numero_decls_nolog))

(executables
 (names numero_bench)
 (modules numero_bench)
 (flags
  (:standard -rectypes -warn-error -32-69 -open Numero_decls_nolog))
 (libraries benchmark numero_decls_nolog))

(cram
 (deps ./expo_bench.exe))

(rule
 (targets pp5+dump.exe)
 (action
  (run
   mkcamlp5.opt
   -package
   camlp5,camlp5.pa_o,camlp5.macro,camlp5.pr_dump
   -o
   %{targets})))
